"""
0
01
01 10
01 10 10 01
01 10 10 01 10 01 01 10

文字列の長さが2^30とかになるの厳しくない?10^9くらいか
と思ったが、n rowのk thか。
観察すると、ちょうど前のやつを反転させて足した形になっている
2で割ったあまりを見て、どんどんrowを下げていくとよさそう

若干感覚で解いてしまった...。
変数名としてeven_oddはダメだ
2^30は、(2^10)^3で10^9と推定するのが良いな

自分がどういう考察を元に回答したのか深く考えると、あまりに感覚に基づきすぎていて、もう少し理論立てて考えないといけないなと思った。
2倍ずつ規則的に増えていってるから2で割っていって、余りに注目すると解けそう、くらいの感覚で解いてしまっている

23m
"""

class Solution:
    def kthGrammar(self, n: int, k: int) -> int:
        even_odd = True
        k -= 1
        while k > 0:
            if k >= 2 ** (n - 1) and k % 2 == 0:
                even_odd = not even_odd
            if k < 2 ** (n - 1) and k % 2 != 0:
                even_odd = not even_odd
            k //= 2
            n -= 1
        return int(not even_odd)
